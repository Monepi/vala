/* gsk-3.0.vapi generated by vapigen, do not modify. */

[CCode (cprefix = "Gsk", gir_namespace = "Gsk", gir_version = "3.0", lower_case_cprefix = "gsk_")]
namespace Gsk {
	[CCode (cheader_filename = "gsk/gsk.h", type_id = "gsk_render_node_get_type ()")]
	public class RenderNode : GLib.Object {
		[CCode (has_construct_function = false)]
		[Version (since = "3.22")]
		public RenderNode ();
		[Version (since = "3.22")]
		public bool contains (Gsk.RenderNode descendant);
		[Version (since = "3.22")]
		public Cairo.Context get_draw_context ();
		[Version (since = "3.22")]
		public unowned Gsk.RenderNode get_first_child ();
		[Version (since = "3.22")]
		public unowned Gsk.RenderNode get_last_child ();
		[Version (since = "3.22")]
		public uint get_n_children ();
		[Version (since = "3.22")]
		public unowned Gsk.RenderNode get_next_sibling ();
		[Version (since = "3.22")]
		public unowned Gsk.RenderNode get_parent ();
		[Version (since = "3.22")]
		public unowned Gsk.RenderNode get_previous_sibling ();
		[Version (since = "3.22")]
		public unowned Gsk.RenderNode insert_child_after (Gsk.RenderNode child, Gsk.RenderNode? sibling);
		[Version (since = "3.22")]
		public unowned Gsk.RenderNode insert_child_at_pos (Gsk.RenderNode child, int index_);
		[Version (since = "3.22")]
		public unowned Gsk.RenderNode insert_child_before (Gsk.RenderNode child, Gsk.RenderNode? sibling);
		[Version (since = "3.22")]
		public bool is_hidden ();
		[Version (since = "3.22")]
		public bool is_opaque ();
		[Version (since = "3.22")]
		public unowned Gsk.RenderNode remove_all_children ();
		public unowned Gsk.RenderNode remove_child (Gsk.RenderNode child);
		[Version (since = "3.22")]
		public unowned Gsk.RenderNode replace_child (Gsk.RenderNode new_child, Gsk.RenderNode old_child);
		[Version (since = "3.22")]
		public void set_bounds (Graphene.Rect? bounds);
		[Version (since = "3.22")]
		public void set_child_transform (Graphene.Matrix? transform);
		[Version (since = "3.22")]
		public void set_hidden (bool hidden);
		[Version (since = "3.22")]
		public void set_name (string? name);
		[Version (since = "3.22")]
		public void set_opacity (double opacity);
		[Version (since = "3.22")]
		public void set_opaque (bool opaque);
		[Version (since = "3.22")]
		public void set_surface (Cairo.Surface? surface);
		[Version (since = "3.22")]
		public void set_transform (Graphene.Matrix? transform);
	}
	[CCode (cheader_filename = "gsk/gsk.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", type_id = "gsk_render_node_iter_get_type ()")]
	[Compact]
	public class RenderNodeIter {
		[CCode (has_construct_function = false)]
		[Version (since = "3.22")]
		public RenderNodeIter ();
		[Version (since = "3.22")]
		public void free ();
		[Version (since = "3.22")]
		public void init (Gsk.RenderNode node);
		[Version (since = "3.22")]
		public bool is_valid ();
		[Version (since = "3.22")]
		public bool next (out unowned Gsk.RenderNode child);
		[Version (since = "3.22")]
		public bool prev (out unowned Gsk.RenderNode child);
		[Version (since = "3.22")]
		public void remove ();
	}
	[CCode (cheader_filename = "gsk/gsk.h", type_id = "gsk_renderer_get_type ()")]
	public abstract class Renderer : GLib.Object {
		[CCode (has_construct_function = false)]
		protected Renderer ();
		[Version (since = "3.22")]
		public bool get_auto_clear ();
		[Version (since = "3.22")]
		public unowned Gdk.Display get_display ();
		public Cairo.Context get_draw_context ();
		[Version (since = "3.22")]
		public static Gsk.Renderer get_for_display (Gdk.Display display);
		[Version (since = "3.22")]
		public Graphene.Matrix get_modelview ();
		[Version (since = "3.22")]
		public Graphene.Matrix get_projection ();
		[Version (since = "3.22")]
		public unowned Gsk.RenderNode? get_root_node ();
		[Version (since = "3.22")]
		public void get_scaling_filters (out Gsk.ScalingFilter? min_filter, out Gsk.ScalingFilter? mag_filter);
		[Version (since = "3.22")]
		public unowned Cairo.Surface? get_surface ();
		[Version (since = "3.22")]
		public bool get_use_alpha ();
		[Version (since = "3.22")]
		public Graphene.Rect get_viewport ();
		[Version (since = "3.22")]
		public unowned Gdk.Window? get_window ();
		[Version (since = "3.22")]
		public bool realize ();
		[Version (since = "3.22")]
		public void render ();
		[Version (since = "3.22")]
		public void set_auto_clear (bool clear);
		public void set_draw_context (Cairo.Context cr);
		[Version (since = "3.22")]
		public void set_modelview (Graphene.Matrix modelview);
		[Version (since = "3.22")]
		public void set_projection (Graphene.Matrix projection);
		[Version (since = "3.22")]
		public void set_root_node (Gsk.RenderNode? root);
		[Version (since = "3.22")]
		public void set_scaling_filters (Gsk.ScalingFilter min_filter, Gsk.ScalingFilter mag_filter);
		[Version (since = "3.22")]
		public void set_surface (Cairo.Surface? surface);
		[Version (since = "3.22")]
		public void set_use_alpha (bool use_alpha);
		[Version (since = "3.22")]
		public void set_viewport (Graphene.Rect? viewport);
		[Version (since = "3.22")]
		public void set_window (Gdk.Window? window);
		[Version (since = "3.22")]
		public void unrealize ();
		[Version (since = "3.22")]
		public bool auto_clear { get; set; }
		[Version (since = "3.22")]
		public Gdk.Display display { get; construct; }
		[NoAccessorMethod]
		[Version (since = "3.22")]
		public Gsk.ScalingFilter magnification_filter { get; set; }
		[NoAccessorMethod]
		[Version (since = "3.22")]
		public Gsk.ScalingFilter minification_filter { get; set; }
		[Version (since = "3.22")]
		public Graphene.Matrix modelview { get; set; }
		[Version (since = "3.22")]
		public Graphene.Matrix projection { get; set; }
		[Version (since = "3.22")]
		public Gsk.RenderNode root_node { get; set; }
		[Version (since = "3.22")]
		public Cairo.Surface surface { get; set; }
		[Version (since = "3.22")]
		public bool use_alpha { get; set; }
		[Version (since = "3.22")]
		public Graphene.Rect viewport { get; set; }
		[Version (since = "3.22")]
		public Gdk.Window window { get; set; }
	}
	[CCode (cheader_filename = "gsk/gsk.h", cprefix = "GSK_SCALING_FILTER_", type_id = "gsk_scaling_filter_get_type ()")]
	[Version (since = "3.22")]
	public enum ScalingFilter {
		LINEAR,
		NEAREST,
		TRILINEAR
	}
}
